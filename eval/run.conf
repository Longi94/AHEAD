# this config file contains some settings for the evaluation script --- we exported them to this file for convenience
# this file is intended to be sourced in the "run.sh" bash script

if [[ -z ${AHEAD_EVAL_RUN_CONF+x} ]] ; then
	export AHEAD_EVAL_RUN_CONF=""
	SOURCE_DIR_RUN="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd )"
	echo "Sourcing '${SOURCE_DIR_RUN}/run.conf'"
	[[ -z ${AHEAD_COMMON_CONF+x} ]] && { source "${SOURCE_DIR_RUN}/../common.conf" || { echo "Could not source file \"${SOURCE_DIR_RUN}/../common.conf\""; exit 1; }; }

	[[ -z ${PATH_BASE+x} ]] && export PATH_BASE="$(cd "${SOURCE_DIR_RUN}/.." >/dev/null && pwd )"
	[[ -z ${PATH_BUILD+x} ]] && export PATH_BUILD="${AHEAD_BUILD_RELEASE_DIR}"
	[[ -z ${PATH_DB+x} ]] && export PATH_DB="${AHEAD_DB_PATH}"
	[[ -z ${PATH_EVAL+x} ]] && export PATH_EVAL="${PATH_BASE}/eval"
	[[ -z ${PATH_EVAL_CURRENT+x} ]] && export PATH_EVAL_CURRENT="${PATH_EVAL}/${AHEAD_DATE}"
	[[ -z ${PATH_EVALDATA+x} ]] && export PATH_EVALDATA="${PATH_EVAL_CURRENT}/data"
	[[ -z ${PATH_EVALINTER+x} ]] && export PATH_EVALINTER="${PATH_EVAL_CURRENT}/intermediate"
	[[ -z ${PATH_EVALREPORT+x} ]] && export PATH_EVALREPORT="${PATH_EVAL_CURRENT}/report"
	[[ -z ${EXEC_ENV+x} ]] && export EXEC_ENV="$(which env)"
	[[ -z ${EXEC_BASH+x} ]] && export EXEC_BASH="$(which bash)"

	# ATTENTION !!! If you change the following names, then you MUST change the file names in "/paper/06-end2end-eval.tex" as well !!!
	[[ -z ${PATH_SCALAR_VS_VECTOR_BASENAME+x} ]] && export PATH_SCALAR_VS_VECTOR_BASENAME="scalarVSvector"
	[[ -z ${PATH_SCALAR_VS_VECTOR_GNUPLOTFILE+x} ]] && export PATH_SCALAR_VS_VECTOR_GNUPLOTFILE="${PATH_EVALREPORT}/${PATH_SCALAR_VS_VECTOR_BASENAME}.m"
	[[ -z ${PATH_SCALAR_VS_VECTOR_DATAFILE+x} ]] && export PATH_SCALAR_VS_VECTOR_DATAFILE="${PATH_EVALREPORT}/${PATH_SCALAR_VS_VECTOR_BASENAME}.data"
	[[ -z ${PATH_SCALAR_VS_VECTOR_PLOTFILE+x} ]] && export PATH_SCALAR_VS_VECTOR_PLOTFILE="${PATH_EVALREPORT}/${PATH_SCALAR_VS_VECTOR_BASENAME}.tex"

	# ATTENTION !!! If you change the following names, then you MUST change the file names in "/paper/01-introduction.tex" as well !!!
	[[ -z ${PATH_TEASER_RUNTIME_BASENAME+x} ]] && export PATH_TEASER_RUNTIME_BASENAME="teaser_runtime"
	[[ -z ${PATH_TEASER_RUNTIME_GNUPLOTFILE+x} ]] && export PATH_TEASER_RUNTIME_GNUPLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_RUNTIME_BASENAME}.m"
	[[ -z ${PATH_TEASER_RUNTIME_DATAFILE+x} ]] && export PATH_TEASER_RUNTIME_DATAFILE="${PATH_EVALREPORT}/${PATH_TEASER_RUNTIME_BASENAME}.data"
	[[ -z ${PATH_TEASER_RUNTIME_PLOTFILE+x} ]] && export PATH_TEASER_RUNTIME_PLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_RUNTIME_BASENAME}.tex"
	[[ -z ${PATH_TEASER_CONSUMPTION_BASENAME+x} ]] && export PATH_TEASER_CONSUMPTION_BASENAME="teaser_consumption"
	[[ -z ${PATH_TEASER_CONSUMPTION_GNUPLOTFILE+x} ]] && export PATH_TEASER_CONSUMPTION_GNUPLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_CONSUMPTION_BASENAME}.m"
	[[ -z ${PATH_TEASER_CONSUMPTION_DATAFILE+x} ]] && export PATH_TEASER_CONSUMPTION_DATAFILE="${PATH_EVALREPORT}/${PATH_TEASER_CONSUMPTION_BASENAME}.data"
	[[ -z ${PATH_TEASER_CONSUMPTION_PLOTFILE+x} ]] && export PATH_TEASER_CONSUMPTION_PLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_CONSUMPTION_BASENAME}.tex"
	[[ -z ${PATH_TEASER_LEGEND_BASENAME+x} ]] && export PATH_TEASER_LEGEND_BASENAME="teaser_legend"
	[[ -z ${PATH_TEASER_LEGEND_GNUPLOTFILE+x} ]] && export PATH_TEASER_LEGEND_GNUPLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_LEGEND_BASENAME}.m"
	[[ -z ${PATH_TEASER_LEGEND_PLOTFILE+x} ]] && export PATH_TEASER_LEGEND_PLOTFILE="${PATH_EVALREPORT}/${PATH_TEASER_LEGEND_BASENAME}.tex"

	[[ -z "${AHEAD_CXX_COMPILER+x}" ]] && export AHEAD_CXX_COMPILER="c++"
	[[ -z "${AHEAD_GXX_COMPILER+x}" ]] && export AHEAD_GXX_COMPILER="g++"
	[[ -z "${AHEAD_EXECUTABLE_BASE+x}" ]] && export AHEAD_EXECUTABLE_BASE="ssbm-q"
	[[ -z "${AHEAD_BASEREPLACE1+x}" ]] && export AHEAD_BASEREPLACE1="s/${AHEAD_EXECUTABLE_BASE}\([0-9]\)\([0-9]\)/Q\1.\2/g"
	[[ -z "${AHEAD_BASEREPLACE2+x}" ]] && export AHEAD_BASEREPLACE2="s/[_]\([^[:space:]]\)[^[:space:]]*/^\{\1\}/g"

	# Exporting arrays does not work out of the box, so we need some trickery here.
	[[ -z "${AHEAD_IMPLEMENTED+x}" ]] && export AHEAD_IMPLEMENTED="(11 12 13)" #"(11 12 13 21 22 23 31 32 33 34 41 42 43)"
	# ATTENTION !!! When you change the following, then you MUST adapt variable TEASER_INDICES, too !!!
	export AHEAD_VARIANTS="('_normal' '_dmr_seq' '_early' '_late' '_continuous' '_continuous_reenc')"
	export AHEAD_VARIANT_NAMES="('Unprotected' 'DMR' 'Early' 'Late' 'Continuous' 'Reencoding')"
	export AHEAD_ARCHITECTURES="('_scalar'"
	export AHEAD_ARCHITECTURE_NAMES="('Scalar'"
	cat /proc/cpuinfo | grep sse4_2 &>/dev/null
	HAS_SSE42=$?
	if [[ ${HAS_SSE42} -eq 0 ]]; then
		AHEAD_ARCHITECTURES="${AHEAD_ARCHITECTURES} '_SSE'"
		AHEAD_ARCHITECTURE_NAMES="${AHEAD_ARCHITECTURE_NAMES} 'SSE4.2'"
	fi
	export AHEAD_ARCHITECTURES="${AHEAD_ARCHITECTURES})"
	export AHEAD_ARCHITECTURE_NAMES="${AHEAD_ARCHITECTURE_NAMES})"
	export AHEAD_TEASER_INDICES="(0 1 4)"

	[[ -z ${AHEAD_BENCHMARK_NUMRUNS+x} ]] && export AHEAD_BENCHMARK_NUMRUNS=10 # like above
	#[[ -z ${AHEAD_BENCHMARK_NUMBEST+x} ]] && export AHEAD_BENCHMARK_NUMBEST=$(($AHEAD_BENCHMARK_NUMRUNS > 10 ? 10 : $AHEAD_BENCHMARK_NUMRUNS))
	[[ -z ${AHEAD_BENCHMARK_NUMBEST+x} ]] && export AHEAD_BENCHMARK_NUMBEST=$AHEAD_BENCHMARK_NUMRUNS
elif [[ ! -z ${VERBOSE+x} ]]; then
	SOURCE_DIR_RUN="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd )"
	echo "Already sourced '${SOURCE_DIR_RUN}/run.conf'!"
fi
